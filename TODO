* Add comments (and commented out examples) to the
  clauses in the "LISTENING PORTS" config file section
  explaining how to enable IPv6 on a port.

* Update README.Debian:
  o Restructure, add headings and leading TOC.
  o A note on database drivers (possibly include
    the suggestion by Gerfried Fuchs about usage
    of PostrgeSQL via ODBC drivers).
  o A note on epam binary permissions and stat-override.
  o A note on enabling IPv6 (?).

  Also provide extended description of the things
  mentioned in the NEWS file:

  o Mention ejabberdctl commands that were renamed.
  o Mention change in ejabberdctl calling convention
    (no "vhost server" anymore, "registere-users"
    is now called in a different way).
  o sasl.log rename.
  o Mnesia spool reloaction (check first).

  ejabberdctl changes:
    set-password -> change-password
    delete\-older\-messages -> delete-old-messages
    delete\-older\-users -> delete_old_users
    vcard-get -> get_vcard, get_vcard2
    vcard-set -> set_vcard, set_vcard2
    rem_rosteritem -> delete_rosteritem
    killsession -> kick-session
    rosteritem_purge -> none

    vhost-specifics:
      ban_account -> same
      num_active_users -> same
      + some other command from the ejabberdctl itself

* Fix get-orig-source target -- Process-One seems to
  publish the source tarballs in other place these days.

* Remove/rename or comment the "restart" ejabberdctl target
  as it behaves differently compared to the same named
  rc-script tagret.

* Rename sasl.log to erlang.log, as upstream did.
  Possibly requires adjusting the logrotate script.
  Requires mentioning in the NEWS file.

* Upstream changelog mentioned that the mnesia files
  are now located in a subdirectory named after the
  host (or node?); currently there are no signs of this,
  needs further investigation.

* Better parsing of FIREWALL_WINDOW:
  a) make it robust against invalid input.
  b) allow open ranges like 123- and -234.

* Think of implementing /usr/share/ejabberd/common
  which would be sourced by both ejabberdctl and
  ejabberd and processed/constructed certain options.
  Also it seems that the upstream's approach with
  having just one file both for startup and control
  isn't that bad, as current packaging leads to some
  code duplication in scripts.

* In debconf code, check if the user name contains
  the "@" character and if it is, does the part of
  the username to the right of it equals to the
  provided hostname. If both conditions hold,
  extract the real username and proceed, otherwise
  complain. At the current state it's possible to
  enter an invalid username and several users
  tripped over this issue.

* Implement processing of standard Debian build options
  to allow parallel builds (has to be tested) and
  builds with gcc code optimizations turned off.

* Why do we suggest libunix-syslog-perl?


Low priority
============

* Write PID file by default, create /var/run/ejabberd.

* Think of supporting the "live" rc-file target
  to deviate from upstream a bit less (this actually
  should be an argument to ejabberd script).

* Do we need the separate ejabberd script at all?


For reference
=============

* Use upstream ejabberdctl.cfg as /etc/default/ejabberd.
  Requires patching, see the master branch.
  Also ensure that the config is safe w.r.t. proxy65 etc,
  def. log level match etc (compate to the current one).

* Re-check whether the upstream startup files would do
  better than current.
  The current have some nice ideas but they
  a) deviate from upstream
  b) artifically constructing node names for ejabberdctl
     provokes the atom list overflow of the ejabberd host
     in certain scenarious; no robust workaround is known yet.

  On the other hand, upstream scripts:
  a) more cumbersome;
  b) kill epmd;
  c) don't draw dots while waiting for ejabberd to start/stop;
  d) Show nag screens on debug and live targets.

