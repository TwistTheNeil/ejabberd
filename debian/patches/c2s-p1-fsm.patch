This patch fixes a possibility of a DoS attack on ejabberd
due to message queue overload of an Erlang process serving
c2s (client to server) traffic; it is tracked upstream at
https://support.process-one.net/browse/EJAB-1173
and in the Debian security tracker at
http://security-tracker.debian.org/tracker/TEMP-0000000-000001

The patch is based on changesets: 2936, 2938, 2939, 2941 and 2945
of http://svn.process-one.net/ejabberd/branches/ejabberd-2.1.x

The first version to contain the fix is 2.1.3.

Index: src/ejabberd_c2s.erl
===================================================================
--- a/src/ejabberd_c2s.erl	(revision 2935)
+++ b/src/ejabberd_c2s.erl	(revision 2936)
@@ -28,8 +28,10 @@
 -author('alexey@process-one.net').
 -update_info({update, 0}).
 
--behaviour(gen_fsm).
+-define(GEN_FSM, p1_fsm).
 
+-behaviour(?GEN_FSM).
+
 %% External exports
 -export([start/2,
 	 stop/1,
@@ -104,8 +106,8 @@
 
 %% Module start with or without supervisor:
 -ifdef(NO_TRANSIENT_SUPERVISORS).
--define(SUPERVISOR_START, gen_fsm:start(ejabberd_c2s, [SockData, Opts],
-					?FSMOPTS)).
+-define(SUPERVISOR_START, ?GEN_FSM:start(ejabberd_c2s, [SockData, Opts],
+					 fsm_limit_opts() ++ ?FSMOPTS)).
 -else.
 -define(SUPERVISOR_START, supervisor:start_child(ejabberd_c2s_sup,
 						 [SockData, Opts])).
@@ -140,17 +142,18 @@
     ?SUPERVISOR_START.
 
 start_link(SockData, Opts) ->
-    gen_fsm:start_link(ejabberd_c2s, [SockData, Opts], ?FSMOPTS).
+    ?GEN_FSM:start_link(ejabberd_c2s, [SockData, Opts],
+			fsm_limit_opts() ++ ?FSMOPTS).
 
 socket_type() ->
     xml_stream.
 
 %% Return Username, Resource and presence information
 get_presence(FsmRef) ->
-    gen_fsm:sync_send_all_state_event(FsmRef, {get_presence}, 1000).
+    ?GEN_FSM:sync_send_all_state_event(FsmRef, {get_presence}, 1000).
 
 stop(FsmRef) ->
-    gen_fsm:send_event(FsmRef, closed).
+    ?GEN_FSM:send_event(FsmRef, closed).
 
 %%%----------------------------------------------------------------------
 %%% Callback functions from gen_fsm
@@ -221,7 +224,7 @@
 
 %% Return list of all available resources of contacts,
 get_subscribed(FsmRef) ->
-    gen_fsm:sync_send_all_state_event(FsmRef, get_subscribed, 1000).
+    ?GEN_FSM:sync_send_all_state_event(FsmRef, get_subscribed, 1000).
 
 %%----------------------------------------------------------------------
 %% Func: StateName/2
@@ -903,7 +906,7 @@
 session_established(timeout, StateData) ->
     %% TODO: Options must be stored in state:
     Options = [],
-    proc_lib:hibernate(gen_fsm, enter_loop,
+    proc_lib:hibernate(?GEN_FSM, enter_loop,
 		       [?MODULE, Options, session_established, StateData]),
     fsm_next_state(session_established, StateData);
 
@@ -2153,6 +2156,14 @@
 	    end
     end.
 
+fsm_limit_opts() ->
+    case ejabberd_config:get_local_option(max_fsm_queue) of
+	N when is_integer(N) ->
+	    [{max_queue, N}];
+	_ ->
+	    []
+    end.
+
 %%%----------------------------------------------------------------------
 %%% JID Set memory footprint reduction code
 %%%----------------------------------------------------------------------
Index: doc/guide.tex
===================================================================
--- a/doc/guide.tex	(revision 2938)
+++ b/doc/guide.tex	(revision 2945)
@@ -809,7 +809,7 @@
 \begin{description}
   \titem{\texttt{ejabberd\_c2s}}
     Handles c2s connections.\\
-    Options: \texttt{access}, \texttt{certfile},
+    Options: \texttt{access}, \texttt{certfile}, \texttt{max\_fsm\_queue},
     \texttt{max\_stanza\_size}, \texttt{shaper},
     \texttt{starttls}, \texttt{starttls\_required}, \texttt{tls},
     \texttt{zlib}
@@ -895,9 +895,11 @@
     in seconds: \verb|{http_poll_timeout, 300}.|
   \titem{\{max\_fsm\_queue, Size\}}
     This option specifies the maximum number of elements in the queue of the FSM.
-    This option can be specified for an \term{ejabberd\_service} listener,
+    This option can be specified for \term{ejabberd\_service} and
+    \term{ejabberd\_c2s} listeners,
     or also globally for \term{ejabberd\_s2s\_out}.
-    If the option is not specified for an \term{ejabberd\_service} listener,
+    If the option is not specified for \term{ejabberd\_service} or
+    \term{ejabberd\_c2s} listeners,
     the globally configured value is used.
     The allowed values are integers and 'undefined'.
     Default value: 'undefined'.
@@ -981,9 +983,11 @@
   Specified in seconds. The default value is 300 seconds (5 minutes).
   \titem{\{max\_fsm\_queue, Size\}}
     This option specifies the maximum number of elements in the queue of the FSM.
-    This option can be specified for an \term{ejabberd\_service} listener,
+    This option can be specified for \term{ejabberd\_service} and
+    \term{ejabberd\_c2s} listeners,
     or also globally for \term{ejabberd\_s2s\_out}.
-    If the option is not specified for an \term{ejabberd\_service} listener,
+    If the option is not specified for \term{ejabberd\_service} or
+    \term{ejabberd\_c2s} listeners,
     the globally configured value is used.
     The allowed values are integers and 'undefined'.
     Default value: 'undefined'.
Index: doc/guide.html
===================================================================
--- a/doc/guide.html	(revision 2938)
+++ b/doc/guide.html	(revision 2945)
@@ -675,7 +675,7 @@
 </P><DL CLASS="description"><DT CLASS="dt-description">
 <B><TT>ejabberd_c2s</TT></B></DT><DD CLASS="dd-description">
 Handles c2s connections.<BR>
- Options: <TT>access</TT>, <TT>certfile</TT>,
+ Options: <TT>access</TT>, <TT>certfile</TT>, <TT>max_fsm_queue</TT>,
 <TT>max_stanza_size</TT>, <TT>shaper</TT>,
 <TT>starttls</TT>, <TT>starttls_required</TT>, <TT>tls</TT>,
 <TT>zlib</TT>
@@ -749,9 +749,11 @@
 in seconds: <CODE>{http_poll_timeout, 300}.</CODE>
 </P></DD><DT CLASS="dt-description"><B><TT>{max_fsm_queue, Size}</TT></B></DT><DD CLASS="dd-description">
 This option specifies the maximum number of elements in the queue of the FSM.
-This option can be specified for an <TT>ejabberd_service</TT> listener,
+This option can be specified for <TT>ejabberd_service</TT> and
+<TT>ejabberd_c2s</TT> listeners,
 or also globally for <TT>ejabberd_s2s_out</TT>.
-If the option is not specified for an <TT>ejabberd_service</TT> listener,
+If the option is not specified for <TT>ejabberd_service</TT> or
+<TT>ejabberd_c2s</TT> listeners,
 the globally configured value is used.
 The allowed values are integers and &#X2019;undefined&#X2019;.
 Default value: &#X2019;undefined&#X2019;.
@@ -833,9 +835,11 @@
 Specified in seconds. The default value is 300 seconds (5 minutes).
 </DD><DT CLASS="dt-description"><B><TT>{max_fsm_queue, Size}</TT></B></DT><DD CLASS="dd-description">
 This option specifies the maximum number of elements in the queue of the FSM.
-This option can be specified for an <TT>ejabberd_service</TT> listener,
+This option can be specified for <TT>ejabberd_service</TT> and
+<TT>ejabberd_c2s</TT> listeners,
 or also globally for <TT>ejabberd_s2s_out</TT>.
-If the option is not specified for an <TT>ejabberd_service</TT> listener,
+If the option is not specified for <TT>ejabberd_service</TT> or
+<TT>ejabberd_c2s</TT> listeners,
 the globally configured value is used.
 The allowed values are integers and &#X2019;undefined&#X2019;.
 Default value: &#X2019;undefined&#X2019;.
@@ -1213,7 +1217,7 @@
 </PRE><P> <A NAME="configmaxs2sconns"></A> </P><!--TOC subsubsection Several connections to a remote XMPP server with ACL-->
 <H4 CLASS="subsubsection"><!--SEC ANCHOR --><A HREF="#configmaxs2sconns">Several connections to a remote XMPP server with ACL</A></H4><!--SEC END --><P> <A NAME="configmaxs2sconns"></A> 
 </P><P>The special access <TT>max_s2s_connections</TT> specifies how many
-simultaneus S2S connections can be established to a specific remote XMPP server.
+simultaneous S2S connections can be established to a specific remote XMPP server.
 The default value is <TT>1</TT>.
 There&#X2019;s also available the access <TT>max_s2s_connections_per_node</TT>.</P><P>The syntax is:
 </P><DL CLASS="description"><DT CLASS="dt-description"><B><TT>{access, max_s2s_connections, [ {MaxNumber, ACLName}, ...]}.</TT></B></DT></DL><P>Examples:
Index: src/ejabberd_c2s.erl
===================================================================
--- a/src/ejabberd_c2s.erl	(revision 2938)
+++ b/src/ejabberd_c2s.erl	(revision 2945)
@@ -107,7 +107,7 @@
 %% Module start with or without supervisor:
 -ifdef(NO_TRANSIENT_SUPERVISORS).
 -define(SUPERVISOR_START, ?GEN_FSM:start(ejabberd_c2s, [SockData, Opts],
-					 fsm_limit_opts() ++ ?FSMOPTS)).
+					 fsm_limit_opts(Opts) ++ ?FSMOPTS)).
 -else.
 -define(SUPERVISOR_START, supervisor:start_child(ejabberd_c2s_sup,
 						 [SockData, Opts])).
@@ -143,7 +143,7 @@
 
 start_link(SockData, Opts) ->
     ?GEN_FSM:start_link(ejabberd_c2s, [SockData, Opts],
-			fsm_limit_opts() ++ ?FSMOPTS).
+			fsm_limit_opts(Opts) ++ ?FSMOPTS).
 
 socket_type() ->
     xml_stream.
@@ -2156,12 +2156,17 @@
 	    end
     end.
 
-fsm_limit_opts() ->
-    case ejabberd_config:get_local_option(max_fsm_queue) of
-	N when is_integer(N) ->
+fsm_limit_opts(Opts) ->
+    case lists:keysearch(max_fsm_queue, 1, Opts) of
+	{value, {_, N}} when is_integer(N) ->
 	    [{max_queue, N}];
 	_ ->
-	    []
+	    case ejabberd_config:get_local_option(max_fsm_queue) of
+		N when is_integer(N) ->
+		    [{max_queue, N}];
+		_ ->
+		    []
+	    end
     end.
 
 %%%----------------------------------------------------------------------
