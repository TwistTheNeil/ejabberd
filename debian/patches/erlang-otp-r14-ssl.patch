Description: When building for Erlang/OTP R14, use public_key library
 This fixes configuration/compilation problems due ejabberd using
 private functions from Erlang/OTP ssl library which became
 deprecated in Erlang/OTP R14A.
 .
 The patch was slightly modified to incorporate certain changes
 directly to the configure script instead of aclocal.m4.
From: Badlop <badlop@process-one.net>
Origin: upstream, https://support.process-one.net/secure/attachment/16887/953-21-r14.diff
Bug: https://support.process-one.net/browse/EJAB-953

--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -30,7 +30,7 @@
   INIT_USER=$(INSTALLUSER)
 endif
 
-EFLAGS += @ERLANG_SSL39@ -pa .
+EFLAGS += @ERLANG_SSLVER@ -pa .
 
 # make debug=true to compile Erlang module with debug informations.
 ifdef debug
--- a/src/ejabberd_s2s_in.erl
+++ b/src/ejabberd_s2s_in.erl
@@ -48,6 +48,11 @@
 
 -include("ejabberd.hrl").
 -include("jlib.hrl").
+-ifdef(SSL40).
+-include_lib("public_key/include/public_key.hrl"). 
+-define(PKIXEXPLICIT, 'OTP-PUB-KEY').
+-define(PKIXIMPLICIT, 'OTP-PUB-KEY').
+-else.
 -ifdef(SSL39).
 -include_lib("ssl/include/ssl_pkix.hrl").
 -define(PKIXEXPLICIT, 'OTP-PKIX').
@@ -58,6 +63,7 @@
 -define(PKIXEXPLICIT, 'PKIX1Explicit88').
 -define(PKIXIMPLICIT, 'PKIX1Implicit88').
 -endif.
+-endif.
 -include("XmppAddr.hrl").
 
 -define(DICT, dict).
--- a/src/tls/Makefile.in
+++ b/src/tls/Makefile.in
@@ -21,6 +21,7 @@
     DYNAMIC_LIB_CFLAGS = -KPIC -G -z text
 endif
 
+EFLAGS += @ERLANG_SSLVER@
 EFLAGS += -I ..
 EFLAGS += -pz ..
 
--- a/src/tls/tls.erl
+++ b/src/tls/tls.erl
@@ -61,6 +61,13 @@
 -define(GET_VERIFY_RESULT,    8).
 -define(VERIFY_NONE, 16#10000).
 
+-ifdef(SSL40).
+-define(CERT_DECODE, {public_key, pkix_decode_cert, plain}).
+-else.
+-define(CERT_DECODE, {ssl_pkix, decode_cert, [pkix]}).
+-endif.
+
+
 -record(tlssock, {tcpsock, tlsport}).
 
 start() ->
@@ -232,7 +239,8 @@
 get_peer_certificate(#tlssock{tlsport = Port}) ->
     case port_control(Port, ?GET_PEER_CERTIFICATE, []) of
 	<<0, BCert/binary>> ->
-	    case catch ssl_pkix:decode_cert(BCert, [pkix]) of
+	    {CertMod, CertFun, CertSecondArg} = ?CERT_DECODE,
+	    case catch apply(CertMod, CertFun, [BCert, CertSecondArg]) of
 		{ok, Cert} ->
 		    {ok, Cert};
 		_ ->
--- a/src/web/Makefile.in
+++ b/src/web/Makefile.in
@@ -9,7 +9,7 @@
 ERLANG_CFLAGS = @ERLANG_CFLAGS@
 ERLANG_LIBS = @ERLANG_LIBS@
 
-EFLAGS += @ERLANG_SSL39@
+EFLAGS += @ERLANG_SSLVER@
 EFLAGS += -I ..
 EFLAGS += -pz ..
 
--- a/src/web/mod_http_fileserver.erl
+++ b/src/web/mod_http_fileserver.erl
@@ -66,11 +66,15 @@
 		  headers
 		 }).
 
+-ifdef(SSL40).
+-define(STRING2LOWER, string).
+-else.
 -ifdef(SSL39).
 -define(STRING2LOWER, string).
 -else.
 -define(STRING2LOWER, httpd_util).
 -endif.
+-endif.
 
 -record(state, {host, docroot, accesslog, accesslogfd, directory_indices,
                 custom_headers, default_content_type, content_types = []}).
--- a/src/configure
+++ b/src/configure
@@ -644,7 +644,7 @@
 GREP
 CPP
 LIBICONV
-ERLANG_SSL39
+ERLANG_SSLVER
 ERLANG_LIBS
 ERLANG_CFLAGS
 ERL
@@ -3180,7 +3180,6 @@
 -author('alexey@sevcom.net').
 
 -export([start/0]).
--include_lib("ssl/include/ssl_pkix.hrl").
 
 start() ->
     EIDirS = code:lib_dir("erl_interface") ++ "\n",
@@ -3189,11 +3188,13 @@
     file:write_file("conftest.out", list_to_binary(EIDirS ++ EILibS ++ ssldef() ++ RootDirS)),
     halt().
 
--ifdef('id-pkix').
-ssldef() -> "-DSSL39\n".
--else.
-ssldef() -> "\n".
--endif.
+ssldef() -> 
+   OTP = (catch erlang:system_info(otp_release)),
+   if
+	OTP >= "R14" -> "-DSSL40\n";
+	OTP >= "R12" -> "-DSSL39\n";
+        true -> ""
+   end.
 
 %% return physical architecture based on OS/Processor
 archname() ->
@@ -3243,7 +3244,7 @@
    # Second line
    ERLANG_EI_LIB=`cat conftest.out | head -n 2 | tail -n 1`
    # Third line
-   ERLANG_SSL39=`cat conftest.out | head -n 3 | tail -n 1`
+   ERLANG_SSLVER=`cat conftest.out | head -n 3 | tail -n 1`
    # End line
    ERLANG_DIR=`cat conftest.out | tail -n 1`
 
