Do not send PEP last items multiple times when the user
opens another session while already having one or more
active sessions.

This issue is tracked upstream as EJAB-1116.

This changeset was introduced in revision 2786,
branch http://svn.process-one.net/ejabberd/branches/ejabberd-2.1.x

The first stable version containing the fix is 2.1.1.

---  a/src/mod_pubsub/mod_pubsub.erl	(revision 2785)
+++  b/src/mod_pubsub/mod_pubsub.erl	(revision 2786)
@@ -718,10 +718,16 @@
 
 presence_probe(#jid{luser = User, lserver = Server, lresource = Resource} = JID, JID, Pid) ->
     Proc = gen_mod:get_module_proc(Server, ?PROCNAME),
+    %%?DEBUG("presence probe self ~s@~s/~s  ~s@~s/~s",[User,Server,Resource,element(2,JID),element(3,JID),element(4,JID)]),
     gen_server:cast(Proc, {presence, JID, Pid}),
     gen_server:cast(Proc, {presence, User, Server, [Resource], JID});
+presence_probe(#jid{luser = User, lserver = Server}, #jid{luser = User, lserver = Server}, _Pid) ->
+    %% ignore presence_probe from other ressources for the current user
+    %% this way, we do not send duplicated last items if user already connected with other clients
+    ok;
 presence_probe(#jid{luser = User, lserver = Server, lresource = Resource}, #jid{lserver = Host} = JID, _Pid) ->
     Proc = gen_mod:get_module_proc(Host, ?PROCNAME),
+    %%?DEBUG("presence probe peer ~s@~s/~s  ~s@~s/~s",[User,Server,Resource,element(2,JID),element(3,JID),element(4,JID)]),
     gen_server:cast(Proc, {presence, User, Server, [Resource], JID}).
 
 %% -------
---  a/src/mod_pubsub/mod_pubsub_odbc.erl	(revision 2785)
+++  b/src/mod_pubsub/mod_pubsub_odbc.erl	(revision 2786)
@@ -521,10 +521,16 @@
 
 presence_probe(#jid{luser = User, lserver = Server, lresource = Resource} = JID, JID, Pid) ->
     Proc = gen_mod:get_module_proc(Server, ?PROCNAME),
+    %%?DEBUG("presence probe self ~s@~s/~s  ~s@~s/~s",[User,Server,Resource,element(2,JID),element(3,JID),element(4,JID)]),
     gen_server:cast(Proc, {presence, JID, Pid}),
     gen_server:cast(Proc, {presence, User, Server, [Resource], JID});
+presence_probe(#jid{luser = User, lserver = Server}, #jid{luser = User, lserver = Server}, _Pid) ->
+    %% ignore presence_probe from other ressources for the current user
+    %% this way, we do not send duplicated last items if user already connected with other clients
+    ok;
 presence_probe(#jid{luser = User, lserver = Server, lresource = Resource}, #jid{lserver = Host} = JID, _Pid) ->
     Proc = gen_mod:get_module_proc(Host, ?PROCNAME),
+    %%?DEBUG("presence probe peer ~s@~s/~s  ~s@~s/~s",[User,Server,Resource,element(2,JID),element(3,JID),element(4,JID)]),
     gen_server:cast(Proc, {presence, User, Server, [Resource], JID}).
 
 %% -------
