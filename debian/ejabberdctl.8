.TH ejabberdctl 8 "04 October 2009" "Version 2.1.0 RC1" "ejabberdctl manual page"

.SH NAME
ejabberdctl \(em a control interface of ejabberd Jabber/XMPP server

.SH SYNOPSIS
.PP 
\fBejabberdctl\fR \fI[\-\-node nodename] [\-\-auth user host password] [command [options]]\fP

.SH DESCRIPTION
.PP 
\fBejabberdctl\fR  is a front end to the ejabberd Jabber/XMPP server.
It is designed to help the administrator control the functioning of the
running \fBejabberd\fR daemon.
.PP
This command must be run by a superuser.

.SH OPTIONS
.TP
.BI \-\-node " nodename"
Specifies remote Erlang node to connect to. Default value is
\fIejabberd\fP.
If the node name does not contain a symbol \fI@\fP
then the actual node name becomes \fInode@host\fP where \fIhost\fP is short
hostname (usually it coincides with \fI\(gahostname \-s\(ga\fP).
If the node name contains a symbol \fI@\fR and its hostname part
is a FQDN then \fBejabberd\fR will use so-called long names
(see \fBerl\fR(1) manual page and look for options \fI\-name\fP
and \fI\-sname\fP for details).

Examples of \fI\-\-node\fP option:

.BI ejabberd
Connect to locally run ejabberd server at node \fIejabberd@\(gahostname \-s\(ga\fP.

.BI ejabberd@otherhost
Connect to remotely run ejabberd server at node \fIejabberd@otherhost\fP.

.BI ejabberd@localhost
Connect to locally run ejabberd server at node \fIejabberd@localhost\fP.

ejabberdctl honors \fBERLANG_NODE\fR environment variable from
/etc/default/ejabberd, see below.

.TP
.BI \-\-auth " user host password"
If restriction of access to \fBejabberdctl\fR commands is configured
(see the "Restrict Execution with AccessCommands" section in the
Installation and Operation Guide), this option must be used to
authenticate the entity requesting execution of the command.
\fIuser\fP and \fIhost\fP are the respective parts of the entity JID
and \fIpassword\fP is either a plain text password to authenticate
that JID or the MD5 hash of that password.

.SH COMMANDS

.PP
Some commands to \fBejabberdctl\fR are single words, like \fBstatus\fR,
and some are multi-word, like \fBreopen-log\fR; to join the adjacent
words of the multi-word commands you can use either the underline ("_")
symbol or the minus sign ("-") or a mixture of them, so all the following
forms are valid: \fBstatus_list_host\fR, \fBstatus-list-host\fR,
\fBstatus_list-host\fR.

.PP
When run without any \fIcommand\fP specified, \fBejabberdctl\fR
prints the list of available commands and their short descriptions.

.PP
The following commands can be used:
.TP
.BI help " [\-\-tags [tag] | PATTERN]"
The \fBhelp\fR command without any options does the same thing
as running \fBejabberdctl\fR without any command specified \(em it
prints the list of available commands along with their short descriptions.
.IP
The \fI\-\-tags\fP option specified alone makes the \fBhelp\fR command
print the list of supported "help tags" which group \fBejabberdctl\fR
commands on the basis of their purpose (such as debugging commands,
backup commands etc).
.IP
The \fI\-\-tags\fP option specified with a tag \fItag\fP makes the
\fBhelp\fR command print the list of commands associated wih
the help tag \fItag\fP along with their short descriptions.
.IP
If the \fBhelp\fR command is followed by a word other than "\-\-tags",
this word is interpreted as a pattern specifying a set of commands
to print the help on.
In this pattern, a "*" character matches any number of characters,
including zero, and a "?" character matches any single character.
Note that when running \fBejabberdctl\fR with this form of the
\fBhelp\fR command from the shell, you have to protect the characters
in the pattern from being interpreted by the shell.
.TP
.BI debug
Attaches an interactive Erlang shell to a running ejabberd server. To detach it
press Ctrl+G, then input a character "q" and hit <Return>.
.TP
.BI status
Requests status of the Erlang virtual machine where ejabberd server is running.
.TP
.BI stop
Stops the ejabberd server and Erlang virtual machine.
.TP
.BI restart
Restarts the ejabberd server inside Erlang virtual machine. Note that if you want
to change VM options (enable/disable kernel poll or SMP, increase number of ports
or database tables) you have to stop ejabberd completely and then start it again.
.TP
.BI reopen\-log
Force the ejabberd server to reopen its log
file (\fI/var/log/ejabberd/ejabberd.log\fP by default).
If module mod_http_fileserver is loaded then force the ejabberd server to reopen
its weblog file.
.TP
.BI register " user server password"
Register user \fIuser\fP with password \fIpassword\fP at ejabberd virtual
host \fIserver\fP.
.TP
.BI unregister " user server"
Unregister user \fIuser\fP at ejabberd virtual host \fIserver\fP.
.TP
.BI backup " filepath"
Backup user database of the ejabberd server to file \fIfilepath\fP.
.TP
.BI restore " filepath"
Restore user database of the ejabberd server from backup file \fIfilepath\fP.
.TP
.BI install\-fallback " filepath"
Install a backup to \fIfilepath\fP as fallback. The fallback will be
used to restore the database at the next start-up.
.TP
.BI dump " filepath"
Dump user database of the ejabberd server to text file \fIfilepath\fP.
.TP
.BI load " filepath"
Restore user database of the ejabberd server from text file \fIfilepath\fP.
.TP
.BI dump\-table " file table"
Dump the specified database \fItable\fR to the specified text \fIfile\fR.
.TP
.BI export\-piefxis " dir"
Export data of all users registered on all virtual hosts of the server
to a set of PIEFXIS files (XEP-0227) which will be stored
in the directory \fIdir\fR.
.TP
.BI export\-piefxis\-host " dir host"
Export data of all the users registered on the specified
virtual host \fIhost\fR to a set of PIEFXIS files (XEP-0227)
which will be stored in the directory \fIdir\fR.
.TP
.BI import\-piefxis " file"
Import users' data from a PIEFXIS file (XEP-0227) \fIfile\fR.
.TP
.BI import\-file " filepath"
Import user data from jabberd 1.4 spool file \fIfilepath\fP. For example, if
\fIfilepath\fP is \fI.../example.org/user.xml\fP then imported username will be
\fIuser\fP and it will be imported to virtual server \fIexample.org\fP.
.TP
.BI import\-dir " directorypath"
Import user data from jabberd 1.4 spool directory \fIdirectorypath\fP. Directory
name should be the name of virtual server to import users.
.TP
.BI mnesia\-change\-nodename " oldnodename newnodename oldbackup newbackup"
Reads the backup file \fIoldbackup\fR (which should have been created
using the \fBejabberdctl backup\fR command) and writes its contents
to the file \fInewbackup\fR while replacing in it all occurences of the
Erlang node name \fIoldnodename\fR with the \fInewnodename\fR.
.IP
This should be used to "migrate" the ejabberd database to the new
hostname of the machine on which ejabberd runs in case this hostname
is about to change. This is because ejabberd is actually served
by an Erlang node which is bound to the name of the physical host
to provide for clustering.
.TP
.BI rename\-default\-nodeplugin
Since release 2.0.0 and up to release 2.1.0, the implementation
of publish-subscribe (pubsub) in ejabberd used a plugin
named "node_default" as the default node plugin.
Starting from release 2.1.0 this functionality is provided by the
new plugin named "hometree".
In the case of upgrading from an older version of ejabberd,
its pubsub database might retain references to the old name of this
plugin, "node_default", and this command can be used to upgrade
the pubsub database, changing all these references to the
new name \- "hometree".
.IP
Note that ejabberd automatically runs this command if you update from
an ejabberd release 2.0.5 or older.
.IP
Running this command on already updated database does nothing.
.TP
.BI delete\-expired\-messages
Delete expired offline messages from ejabberd database.
.TP
.BI delete\-old\-messages " n"
Delete offline messages older than \fIn\fP days from ejabberd database.
.TP
.BI mnesia info
Show some information about the Mnesia system (see \fBmnesia\fP(3), function
\fIinfo\fP).
.TP
.BI mnesia
Show all information about the Mnesia system, such as transaction statistics,
db_nodes, and configuration parameters (see \fBmnesia\fP(3), function
system_info).
.TP
.BI mnesia " key"
Show information about the Mnesia system according to \fIkey\fP specified
(see \fBmnesia\fP(3), function system_info for valid \fIkey\fP values).
.TP
.BI incoming\-s2s\-number
Print number of incoming server-to-server connections to the node.
.TP
.BI outgoing\-s2s\-number
Print number of outgoing server-to-server connections from the node.
.TP
.BI user\-resources " user server"
List all connected resources of user \fIuser@server\fP.
.TP
.BI connected\-users\-number
Report number of established users' sessions.
.TP
.BI connected\-users
List all established users' sessions.
.TP
.BI registered\-users " server"
List all the users registered on the ejabberd server
at the virtual host \fIserver\fP.
.TP
.BI get\-loglevel
Reports the log level (an integer number) ejabberd is operating on.

.SH EXTRA OPTIONS
.PP
An optional module \fBmod_admin_extra\fP adds a number of other commands.
.PP
While it is enabled by default, you might want to check it is actually
enabled in the configuration file (especially if you're upgrading
from pre-2.1 series of ejabberd).
.PP
To enable these additional commands add mod_admin_extra to the
\fB{modules}\fP section of ejabberd config file and make it
looking as the following:
.sp
.nf
{modules,
 [
  ...
  {mod_admin_extra, []},
  ...
 ]}.
.fi
.PP
The new options are:

.TP
.BI compile " file"
Compile Erlang source file \fIfile\fP.
.TP
.BI load\-config " file"
Load config from \fIfile\fP. Note that loading config to a database doesn't mean
reloading server. For example it's impossible to add/remove virtual hosts
without server restart.
.TP
.BI remove\-node " nodename"
Remove an ejabberd node \fInodename\fP from the Mnesia database cluster.
.TP
.BI delete\-older\-users " days"
Delete users that have not logged in the last \fIdays\fP.
.TP
.BI set\-password " user server password"
Set password for user \fIuser@server\fP to \fIpassword\fP.
.TP
.BI export2odbc " server outputdir"
Export Mnesia tables on \fIserver\fP to files in \fIoutputdir\fP directory
for subsequent import to a relational database system.
.TP
.BI delete\-older\-messages " days"
Delete offline messages older than \fIdays\fP.
.TP
.BI srg\-create " group host name description display"
Create shared roster group \fIgroup\fP at server \fIhost\fP with displayed name
\fIname\fP, description \fIdescription\fP and displayed groups \fIdisplay\fP.
.TP
.BI srg\-delete " group host"
Delete shared roster group \fIgroup\fP from server \fIhost\fP.
.TP
.BI srg\-user\-add " user server group host"
Add user \fIuser@server\fP to group \fIgroup\fP at server \fIhost\fP.
.TP
.BI srg\-user\-del " user server group host"
Delete user \fIuser@server\fP from group \fIgroup\fP at server \fIhost\fP.
.TP
.BI srg\-list\-groups " host"
List the shared roster groups at server \fIhost\fP.
.TP
.BI srg\-get\-info " group host"
Get info on the group \fIgroup\fP at server \fIhost\fP.
.TP
.BI vcard\-get " user host data [data2]"
Get data from the vCard of \fIuser@host\fP. \fIdata\fP (and optional \fIdata2\fP)
is a vCard node. For example \fIdata\fP may be \fBFN\fP or \fBNICKNAME\fP.
For retrieving email address use \fBEMAIL USERID\fP. Other options can be obtained
from XEP-0054 (http://www.xmpp.org/extensions/xep\-0054.html).
.TP
.BI vcard\-set " user host data [data2] content"
Set data to content for \fIuser@host\fP vCard. \fIdata\fP (and optional \fIdata2\fP)
has the same meaning as for \fBvcard\-get\fP command.
\" .TP
\" .BI muc\-purge " days"
\" Destroy MUC rooms with zero activity (no messages in history) in the last
\" \fIdays\fP days.
\" .TP
\" .BI muc\-online\-rooms
\" Print the list of existing MUC rooms.
.TP
.BI add\-rosteritem " user1 server1 user2 server2 nick group subs"
Add \fIuser2@server2\fP to \fIuser1@server1\fP's roster.
Option \fIsubs\fP must be one of the \fInone\fP, \fIfrom\fP, or \fIboth\fP.
.TP
.BI rem\-rosteritem " user1 server1 user2 server2"
Remove \fIuser2@server2\fP from \fIuser1@server1\fP's roster. 
.TP
.BI rosteritem\-purge " [options]"
Purge all roster items that match filtering options.
.TP
.BI pushroster " file user server"
Push template roster in file \fIfile\fP to \fIuser@server\fP. The file contents
must use the following format:
.sp
.nf
[{"bob", "example.org", "Bob's group", "Bob's nickname"},
 {"mart", "example.org", "workers", "Mart"},
 {"Rich", "example.org", "bosses", "Rich"}].
.fi
.TP
.BI pushroster\-all " file"
Push template roster in file to all users listed in the file \fIfile\fP itself.
The file contents must be in the same format as for \fBpushroster\fP command.
.TP
.BI push\-alltoall " server group"
Adds all the users at server \fIserver\fP to each other's roster using group \fIgroup\fP.
.TP
.BI status\-list " status"
Print the list of currently logged users with status \fIstatus\fP. Status can be either
\fBall\fP or one of the following: \fBavailable\fP, \fBchat\fP, \fBaway\fP, \fBxa\fP,
\fBdnd\fP.
.TP
.BI status\-num " status"
Print the number of currently logged users with status \fIstatus\fP. Status can be either
\fBall\fP or one of the following: \fBavailable\fP, \fBchat\fP, \fBaway\fP, \fBxa\fP,
\fBdnd\fP.
.TP
.BI "stats registeredusers"
Print the number of currently registered users.
.TP
.BI "stats onlineusers"
Print the number of currently logged users.
.TP
.BI "stats onlineusersnode"
Print the number of currently logged users in the ejabberd node.
.TP
.BI "stats uptime\-seconds"
Print the uptime of ejabberd node in seconds.
.TP
.BI get\-cookie
Get the Erlang cookie of this node.
.TP
.BI killsession " user server resource"
Kill user \fIuser@server/resource\fP session.

.PP
If there are \fIvhost server\fP options then the \fIcommand\fP can be
one of the following:
.TP
.BI num\-active\-users " days"
Print number of users active in the last \fIdays\fP days (at virtual host \fIserver\fP).
.TP
.BI status\-list " status"
Print the list of currently logged to virtual host \fIserver\fP users with
status \fIstatus\fP. Status can be either
\fBall\fP or one of the following: \fBavailable\fP, \fBchat\fP, \fBaway\fP, \fBxa\fP,
\fBdnd\fP.
.TP
.BI status\-num " status"
Print the number of currently logged to virtual host \fIserver\fP users with
status \fIstatus\fP. Status can be either
\fBall\fP or one of the following: \fBavailable\fP, \fBchat\fP, \fBaway\fP, \fBxa\fP,
\fBdnd\fP.
.TP
.BI "stats registeredusers"
Print number of registered users (at virtual host \fIserver\fP).
.TP
.BI "stats onlineusers"
Print number of logged users (at virtual host \fIserver\fP).
.TP
.BI ban\-account " username [reason]"
Ban account: kick sessions and change password (at virtual host \fIserver\fP).

.SH NOTES

.PP
\fBejabberdctl\fR starts distributed Erlang node \fIejabberddebug\fP (if run
with \fBdebug\fP option) or \fIejabberdctl\fP (if run with any other options).
If the ejabberd server's node name to connect to includes FDQN as a hostname
Erlang option \fI\-name\fP is used. Otherwise \fBejabberdctl\fR uses short
names (\fI\-sname\fP option).

.PP
Note that \fBejabberdctl\fR does not append hostname to its own node name
leaving this to Erlang emulator. It usually follows \fI\(gahostname \-f\(ga\fP
to find a hostname if long names are used or \fI\(gahostname \-s\(ga\fP in
case of short names, but may fail in case of unusual networking settings. A
known case of failure is using long names when \fI\(gahostname \-f\(ga\fP
doesn't return FDQN. If \fRejabberdctl\fR cannot create Erlang node then it
cannot control ejabberd server.

.SH OPTIONS FILE
.PP 
The file \fB/etc/default/ejabberd\fR contains specific options. Two of them
are used by \fBejabberdctl\fP.

.TP
.BI ERLANG_NODE
Use specified string as Erlang node of \fBejabberd\fP server to connect. It
overrides default \fBejabberd\fP node name. The string may take one of the
following forms: \fBnodename\fP, \fBnodename@hostname\fP or
\fBnodename@hostname.domainname\fP.

.TP
.BI FIREWALL_WINDOW
Use the specified range of ports to communicate with the other Erlang
nodes (namely, with the target Erlang node running ejabberd).
This can be useful when the system running the target node has restricted
firewall setup allowing only a certain range of ports to be used by
the Erlang nodes for communication; in this case, you should specify
that range of ports in the \fBFIREWALL_WINDOW\fR setting.

.SH FILES
.PD 0
.I /etc/default/ejabberd
default variables

.SH SEE ALSO 
.PP 
\fBerl\fR(1), \fBejabberd\fR(8), \fBmnesia\fR(3).

.PP 
The program documentation is available at
\fIhttp://www.process\-one.net/en/projects/ejabberd/\fP. 
A copy of the documentation can be found at
/usr/share/doc/ejabberd/guide.html.
 
.SH AUTHORS
.PP 
This manual page was adapted by Sergei Golovan <sgolovan@nes.ru> for 
the \fBDebian\fP system (but may be used by others) from the
\fBejabberd\fP documentation written by Alexey Shchepin <alexey@sevcom.net>.

Permission is granted to copy, distribute and/or modify this document under 
the terms of the GNU General Public License, Version 2 any  
later version published by the Free Software Foundation. 
.PP 
On Debian systems, the complete text of the GNU General Public 
License can be found in /usr/share/common\-licenses/GPL. 

