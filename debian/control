Source: ejabberd
Section: net
Priority: optional
Maintainer: Konstantin Khomoutov <flatworm@users.sourceforge.net>
Uploaders: Gerfried Fuchs <rhonda@debian.org>, Philipp Huebner <debalance@debian.org>
Build-Depends: debhelper (>= 9), dh-apparmor, dh-systemd (>= 1.5), libsqlite3-dev, po-debconf, rebar,
 		erlang-asn1, erlang-base, erlang-crypto, erlang-dev (>= 1:15.b), erlang-eunit, erlang-inets, erlang-lager,
 		erlang-mnesia, erlang-oauth2, erlang-p1-cache-tab, erlang-p1-iconv, erlang-p1-mysql, erlang-p1-pam, erlang-p1-pgsql,
 		erlang-p1-sip, erlang-p1-stringprep, erlang-p1-stun, erlang-p1-tls, erlang-p1-utils, erlang-p1-xml, erlang-p1-yaml,
 		erlang-p1-zlib, erlang-parsetools, erlang-redis-client, erlang-sqlite3, erlang-ssl
Standards-Version: 3.9.6
Homepage: https://www.ejabberd.im
Vcs-Git: git://git.deb.at/pkg/ejabberd.git
Vcs-Browser: http://git.deb.at/w/pkg/ejabberd.git

Package: ejabberd
Architecture: any
Depends: adduser, openssl, ucf, ${misc:Depends}, ${shlibs:Depends},
 		erlang-base (>= 1:15.b) | ${erlang-abi:Depends}, ${erlang:Depends}, erlang-lager, erlang-p1-cache-tab,
 		erlang-p1-iconv, erlang-p1-stringprep, erlang-p1-tls, erlang-p1-utils, erlang-p1-xml, erlang-p1-yaml, erlang-p1-zlib
Breaks: ejabberd-contrib (<= 0.2015.08)
Suggests: ejabberd-contrib (>> 0.2015.08), erlang-p1-mysql, erlang-p1-pam, erlang-p1-pgsql, erlang-redis-client, erlang-p1-sip,
 		erlang-sqlite3, erlang-p1-stun, erlang-oauth2, libunix-syslog-perl, imagemagick | graphicsmagick-imagemagick-compat,
 		apparmor, apparmor-utils
Provides: xmpp-server
Description: distributed, fault-tolerant Jabber/XMPP server
 ejabberd is a Jabber/XMPP server written in Erlang, featuring:
  * distributed operation with load-balancing across a cluster;
  * fault-tolerant database replication and storage on multiple nodes,
    allowing nodes to be added or replaced "on the fly";
  * virtual hosting (several virtual domains can be served using a single
    ejabberd instance);
  * XMPP compliance;
  * web-based administration;
  * SSL/TLS support;
  * conferencing via Multi-User Chat;
  * IRC transport;
  * Jabber Users Directory, based on users' vCards;
  * service discovery;
  * shared roster.
